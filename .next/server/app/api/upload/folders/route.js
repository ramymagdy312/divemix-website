/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/upload/folders/route";
exports.ids = ["app/api/upload/folders/route"];
exports.modules = {

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "buffer":
/*!*************************!*\
  !*** external "buffer" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("buffer");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("crypto");

/***/ }),

/***/ "events":
/*!*************************!*\
  !*** external "events" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("events");

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

"use strict";
module.exports = require("fs");

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("http");

/***/ }),

/***/ "https":
/*!************************!*\
  !*** external "https" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = require("https");

/***/ }),

/***/ "net":
/*!**********************!*\
  !*** external "net" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("net");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("path");

/***/ }),

/***/ "punycode":
/*!***************************!*\
  !*** external "punycode" ***!
  \***************************/
/***/ ((module) => {

"use strict";
module.exports = require("punycode");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("stream");

/***/ }),

/***/ "tls":
/*!**********************!*\
  !*** external "tls" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("tls");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("url");

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("zlib");

/***/ }),

/***/ "?32c4":
/*!****************************!*\
  !*** bufferutil (ignored) ***!
  \****************************/
/***/ (() => {

/* (ignored) */

/***/ }),

/***/ "?66e9":
/*!********************************!*\
  !*** utf-8-validate (ignored) ***!
  \********************************/
/***/ (() => {

/* (ignored) */

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fupload%2Ffolders%2Froute&page=%2Fapi%2Fupload%2Ffolders%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fupload%2Ffolders%2Froute.ts&appDir=D%3A%5CRamy%5CRTS%5CReactJS%5Cdivemix-website%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=D%3A%5CRamy%5CRTS%5CReactJS%5Cdivemix-website&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fupload%2Ffolders%2Froute&page=%2Fapi%2Fupload%2Ffolders%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fupload%2Ffolders%2Froute.ts&appDir=D%3A%5CRamy%5CRTS%5CReactJS%5Cdivemix-website%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=D%3A%5CRamy%5CRTS%5CReactJS%5Cdivemix-website&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!
  \**********************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var D_Ramy_RTS_ReactJS_divemix_website_app_api_upload_folders_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./app/api/upload/folders/route.ts */ \"(rsc)/./app/api/upload/folders/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/upload/folders/route\",\n        pathname: \"/api/upload/folders\",\n        filename: \"route\",\n        bundlePath: \"app/api/upload/folders/route\"\n    },\n    resolvedPagePath: \"D:\\\\Ramy\\\\RTS\\\\ReactJS\\\\divemix-website\\\\app\\\\api\\\\upload\\\\folders\\\\route.ts\",\n    nextConfigOutput,\n    userland: D_Ramy_RTS_ReactJS_divemix_website_app_api_upload_folders_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\nconst originalPathname = \"/api/upload/folders/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZ1cGxvYWQlMkZmb2xkZXJzJTJGcm91dGUmcGFnZT0lMkZhcGklMkZ1cGxvYWQlMkZmb2xkZXJzJTJGcm91dGUmYXBwUGF0aHM9JnBhZ2VQYXRoPXByaXZhdGUtbmV4dC1hcHAtZGlyJTJGYXBpJTJGdXBsb2FkJTJGZm9sZGVycyUyRnJvdXRlLnRzJmFwcERpcj1EJTNBJTVDUmFteSU1Q1JUUyU1Q1JlYWN0SlMlNUNkaXZlbWl4LXdlYnNpdGUlNUNhcHAmcGFnZUV4dGVuc2lvbnM9dHN4JnBhZ2VFeHRlbnNpb25zPXRzJnBhZ2VFeHRlbnNpb25zPWpzeCZwYWdlRXh0ZW5zaW9ucz1qcyZyb290RGlyPUQlM0ElNUNSYW15JTVDUlRTJTVDUmVhY3RKUyU1Q2RpdmVtaXgtd2Vic2l0ZSZpc0Rldj10cnVlJnRzY29uZmlnUGF0aD10c2NvbmZpZy5qc29uJmJhc2VQYXRoPSZhc3NldFByZWZpeD0mbmV4dENvbmZpZ091dHB1dD0mcHJlZmVycmVkUmVnaW9uPSZtaWRkbGV3YXJlQ29uZmlnPWUzMCUzRCEiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7O0FBQXNHO0FBQ3ZDO0FBQ2M7QUFDNEI7QUFDekc7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLGdIQUFtQjtBQUMzQztBQUNBLGNBQWMseUVBQVM7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLFlBQVk7QUFDWixDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsUUFBUSxpRUFBaUU7QUFDekU7QUFDQTtBQUNBLFdBQVcsNEVBQVc7QUFDdEI7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUN1SDs7QUFFdkgiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kaXZlbWl4LXdlYnNpdGUvPzljYWUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQXBwUm91dGVSb3V0ZU1vZHVsZSB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1tb2R1bGVzL2FwcC1yb3V0ZS9tb2R1bGUuY29tcGlsZWRcIjtcbmltcG9ydCB7IFJvdXRlS2luZCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1raW5kXCI7XG5pbXBvcnQgeyBwYXRjaEZldGNoIGFzIF9wYXRjaEZldGNoIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvbGliL3BhdGNoLWZldGNoXCI7XG5pbXBvcnQgKiBhcyB1c2VybGFuZCBmcm9tIFwiRDpcXFxcUmFteVxcXFxSVFNcXFxcUmVhY3RKU1xcXFxkaXZlbWl4LXdlYnNpdGVcXFxcYXBwXFxcXGFwaVxcXFx1cGxvYWRcXFxcZm9sZGVyc1xcXFxyb3V0ZS50c1wiO1xuLy8gV2UgaW5qZWN0IHRoZSBuZXh0Q29uZmlnT3V0cHV0IGhlcmUgc28gdGhhdCB3ZSBjYW4gdXNlIHRoZW0gaW4gdGhlIHJvdXRlXG4vLyBtb2R1bGUuXG5jb25zdCBuZXh0Q29uZmlnT3V0cHV0ID0gXCJcIlxuY29uc3Qgcm91dGVNb2R1bGUgPSBuZXcgQXBwUm91dGVSb3V0ZU1vZHVsZSh7XG4gICAgZGVmaW5pdGlvbjoge1xuICAgICAgICBraW5kOiBSb3V0ZUtpbmQuQVBQX1JPVVRFLFxuICAgICAgICBwYWdlOiBcIi9hcGkvdXBsb2FkL2ZvbGRlcnMvcm91dGVcIixcbiAgICAgICAgcGF0aG5hbWU6IFwiL2FwaS91cGxvYWQvZm9sZGVyc1wiLFxuICAgICAgICBmaWxlbmFtZTogXCJyb3V0ZVwiLFxuICAgICAgICBidW5kbGVQYXRoOiBcImFwcC9hcGkvdXBsb2FkL2ZvbGRlcnMvcm91dGVcIlxuICAgIH0sXG4gICAgcmVzb2x2ZWRQYWdlUGF0aDogXCJEOlxcXFxSYW15XFxcXFJUU1xcXFxSZWFjdEpTXFxcXGRpdmVtaXgtd2Vic2l0ZVxcXFxhcHBcXFxcYXBpXFxcXHVwbG9hZFxcXFxmb2xkZXJzXFxcXHJvdXRlLnRzXCIsXG4gICAgbmV4dENvbmZpZ091dHB1dCxcbiAgICB1c2VybGFuZFxufSk7XG4vLyBQdWxsIG91dCB0aGUgZXhwb3J0cyB0aGF0IHdlIG5lZWQgdG8gZXhwb3NlIGZyb20gdGhlIG1vZHVsZS4gVGhpcyBzaG91bGRcbi8vIGJlIGVsaW1pbmF0ZWQgd2hlbiB3ZSd2ZSBtb3ZlZCB0aGUgb3RoZXIgcm91dGVzIHRvIHRoZSBuZXcgZm9ybWF0LiBUaGVzZVxuLy8gYXJlIHVzZWQgdG8gaG9vayBpbnRvIHRoZSByb3V0ZS5cbmNvbnN0IHsgcmVxdWVzdEFzeW5jU3RvcmFnZSwgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MgfSA9IHJvdXRlTW9kdWxlO1xuY29uc3Qgb3JpZ2luYWxQYXRobmFtZSA9IFwiL2FwaS91cGxvYWQvZm9sZGVycy9yb3V0ZVwiO1xuZnVuY3Rpb24gcGF0Y2hGZXRjaCgpIHtcbiAgICByZXR1cm4gX3BhdGNoRmV0Y2goe1xuICAgICAgICBzZXJ2ZXJIb29rcyxcbiAgICAgICAgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZVxuICAgIH0pO1xufVxuZXhwb3J0IHsgcm91dGVNb2R1bGUsIHJlcXVlc3RBc3luY1N0b3JhZ2UsIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzLCBvcmlnaW5hbFBhdGhuYW1lLCBwYXRjaEZldGNoLCAgfTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXBwLXJvdXRlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fupload%2Ffolders%2Froute&page=%2Fapi%2Fupload%2Ffolders%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fupload%2Ffolders%2Froute.ts&appDir=D%3A%5CRamy%5CRTS%5CReactJS%5Cdivemix-website%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=D%3A%5CRamy%5CRTS%5CReactJS%5Cdivemix-website&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./app/api/upload/folders/route.ts":
/*!*****************************************!*\
  !*** ./app/api/upload/folders/route.ts ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DELETE: () => (/* binding */ DELETE),\n/* harmony export */   GET: () => (/* binding */ GET),\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _lib_supabase__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../lib/supabase */ \"(rsc)/./app/lib/supabase.ts\");\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! fs */ \"fs\");\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(fs__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! path */ \"path\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_3__);\n\n\n\n\n// GET - جلب قائمة المجلدات (مع دعم المجلدات المتداخلة)\nasync function GET(req) {\n    try {\n        const { searchParams } = new URL(req.url);\n        const parentPath = searchParams.get(\"path\") || \"\";\n        const folders = [];\n        // Build the full path for listing\n        const listPath = parentPath ? `uploads/${parentPath}` : \"uploads\";\n        // Try to get folders from Supabase Storage first\n        try {\n            const { data: supabaseFolders, error } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_1__.supabase.storage.from(\"images\").list(listPath, {\n                limit: 1000,\n                offset: 0\n            });\n            if (!error && supabaseFolders) {\n                // Get unique folder names from file paths and actual folders\n                const folderSet = new Set();\n                for (const item of supabaseFolders){\n                    if (item.name && item.name !== \".emptyFolderPlaceholder\") {\n                        // Check if it's a folder (no extension and no size metadata)\n                        if (!item.name.includes(\".\") && !item.metadata?.size) {\n                            folderSet.add(item.name);\n                        } else if (item.name.includes(\"/\")) {\n                            const folderName = item.name.split(\"/\")[0];\n                            folderSet.add(folderName);\n                        }\n                    }\n                }\n                // Convert to array and add folder info\n                folderSet.forEach((folderName)=>{\n                    const fullPath = parentPath ? `${parentPath}/${folderName}` : folderName;\n                    folders.push({\n                        name: folderName,\n                        path: `uploads/${fullPath}`,\n                        fullPath: fullPath,\n                        parentPath: parentPath,\n                        source: \"supabase\",\n                        createdAt: new Date().toISOString(),\n                        isNested: parentPath.length > 0\n                    });\n                });\n            }\n        } catch (supabaseError) {\n            console.log(\"Supabase storage not available, checking local folders...\");\n        }\n        // Also check local uploads folder as fallback\n        try {\n            const uploadsDir = path__WEBPACK_IMPORTED_MODULE_3___default().join(process.cwd(), \"public\", \"uploads\");\n            const targetDir = parentPath ? path__WEBPACK_IMPORTED_MODULE_3___default().join(uploadsDir, parentPath) : uploadsDir;\n            if (fs__WEBPACK_IMPORTED_MODULE_2___default().existsSync(targetDir)) {\n                const items = fs__WEBPACK_IMPORTED_MODULE_2___default().readdirSync(targetDir, {\n                    withFileTypes: true\n                });\n                const localFolders = items.filter((item)=>item.isDirectory());\n                for (const folder of localFolders){\n                    // Check if this folder is not already in the list\n                    const existingFolder = folders.find((f)=>f.name === folder.name);\n                    if (!existingFolder) {\n                        const folderPath = path__WEBPACK_IMPORTED_MODULE_3___default().join(targetDir, folder.name);\n                        const stats = fs__WEBPACK_IMPORTED_MODULE_2___default().statSync(folderPath);\n                        const fullPath = parentPath ? `${parentPath}/${folder.name}` : folder.name;\n                        folders.push({\n                            name: folder.name,\n                            path: `uploads/${fullPath}`,\n                            fullPath: fullPath,\n                            parentPath: parentPath,\n                            source: \"local\",\n                            createdAt: stats.birthtime.toISOString(),\n                            isNested: parentPath.length > 0\n                        });\n                    }\n                }\n            }\n        } catch (localError) {\n            console.log(\"Local uploads folder not accessible\");\n        }\n        // Don't add default folders - let users create their own structure\n        // Sort folders by name\n        folders.sort((a, b)=>a.name.localeCompare(b.name));\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: true,\n            folders: folders\n        });\n    } catch (error) {\n        console.error(\"Error fetching folders:\", error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: \"Failed to fetch folders\"\n        }, {\n            status: 500\n        });\n    }\n}\n// POST - إنشاء مجلد جديد (مع دعم المجلدات المتداخلة)\nasync function POST(req) {\n    try {\n        const { folderName, parentPath } = await req.json();\n        if (!folderName || typeof folderName !== \"string\") {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Folder name is required\"\n            }, {\n                status: 400\n            });\n        }\n        // Clean folder name (remove special characters)\n        const cleanFolderName = folderName.toLowerCase().replace(/[^a-z0-9-_]/g, \"-\").replace(/-+/g, \"-\").replace(/^-|-$/g, \"\");\n        if (!cleanFolderName) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Invalid folder name\"\n            }, {\n                status: 400\n            });\n        }\n        // Build the full path\n        const fullPath = parentPath ? `${parentPath}/${cleanFolderName}` : cleanFolderName;\n        try {\n            // Create folder in Supabase by uploading a placeholder file\n            const placeholderContent = new Uint8Array([]);\n            const { data, error } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_1__.supabase.storage.from(\"images\").upload(`uploads/${fullPath}/.emptyFolderPlaceholder`, placeholderContent, {\n                contentType: \"text/plain\"\n            });\n            if (error) {\n                console.error(\"Supabase folder creation error:\", error);\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                    error: \"Failed to create folder in Supabase\"\n                }, {\n                    status: 500\n                });\n            }\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: true,\n                folder: {\n                    name: cleanFolderName,\n                    path: `uploads/${fullPath}`,\n                    fullPath: fullPath,\n                    parentPath: parentPath || \"\",\n                    source: \"supabase\",\n                    createdAt: new Date().toISOString(),\n                    isNested: Boolean(parentPath)\n                }\n            });\n        } catch (supabaseError) {\n            // Fallback to local folder creation\n            try {\n                const uploadsDir = path__WEBPACK_IMPORTED_MODULE_3___default().join(process.cwd(), \"public\", \"uploads\");\n                const folderPath = path__WEBPACK_IMPORTED_MODULE_3___default().join(uploadsDir, fullPath);\n                if (!fs__WEBPACK_IMPORTED_MODULE_2___default().existsSync(folderPath)) {\n                    fs__WEBPACK_IMPORTED_MODULE_2___default().mkdirSync(folderPath, {\n                        recursive: true\n                    });\n                    return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                        success: true,\n                        folder: {\n                            name: cleanFolderName,\n                            path: `uploads/${fullPath}`,\n                            fullPath: fullPath,\n                            parentPath: parentPath || \"\",\n                            source: \"local\",\n                            createdAt: new Date().toISOString(),\n                            isNested: Boolean(parentPath)\n                        }\n                    });\n                } else {\n                    return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                        error: \"Folder already exists\"\n                    }, {\n                        status: 400\n                    });\n                }\n            } catch (localError) {\n                console.error(\"Local folder creation error:\", localError);\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                    error: \"Failed to create folder\"\n                }, {\n                    status: 500\n                });\n            }\n        }\n    } catch (error) {\n        console.error(\"Error creating folder:\", error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: \"Unexpected error occurred\"\n        }, {\n            status: 500\n        });\n    }\n}\n// DELETE - حذف مجلد (مع دعم المجلدات المتداخلة)\nasync function DELETE(req) {\n    try {\n        const { searchParams } = new URL(req.url);\n        const folderPath = searchParams.get(\"path\");\n        if (!folderPath) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Folder path is required\"\n            }, {\n                status: 400\n            });\n        }\n        try {\n            // Recursively delete all files and subfolders from Supabase\n            const deleteRecursively = async (currentPath)=>{\n                console.log(`Deleting folder: ${currentPath}`);\n                const { data: items, error: listError } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_1__.supabase.storage.from(\"images\").list(`uploads/${currentPath}`, {\n                    limit: 1000,\n                    offset: 0\n                });\n                if (listError) {\n                    console.error(\"Error listing folder contents:\", listError);\n                    return;\n                }\n                if (items && items.length > 0) {\n                    const filesToDelete = [];\n                    const foldersToDelete = [];\n                    for (const item of items){\n                        if (item.name) {\n                            const itemPath = `uploads/${currentPath}/${item.name}`;\n                            // Check if it's a file (has extension or size metadata) or placeholder\n                            if (item.name.includes(\".\") || item.metadata?.size !== undefined || item.name === \".emptyFolderPlaceholder\") {\n                                filesToDelete.push(itemPath);\n                                console.log(`Adding file to delete: ${itemPath}`);\n                            } else {\n                                // It's a subfolder, add to recursive deletion\n                                foldersToDelete.push(`${currentPath}/${item.name}`);\n                                console.log(`Adding folder to delete: ${currentPath}/${item.name}`);\n                            }\n                        }\n                    }\n                    // Delete files first (including placeholder files)\n                    if (filesToDelete.length > 0) {\n                        console.log(`Deleting ${filesToDelete.length} files:`, filesToDelete);\n                        const { error: deleteError } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_1__.supabase.storage.from(\"images\").remove(filesToDelete);\n                        if (deleteError) {\n                            console.error(\"Error deleting files:\", deleteError);\n                        } else {\n                            console.log(\"Files deleted successfully\");\n                        }\n                    }\n                    // Recursively delete subfolders\n                    for (const subfolderPath of foldersToDelete){\n                        await deleteRecursively(subfolderPath);\n                    }\n                }\n                // Also try to delete the placeholder file for this folder\n                const placeholderPath = `uploads/${currentPath}/.emptyFolderPlaceholder`;\n                console.log(`Attempting to delete placeholder: ${placeholderPath}`);\n                const { error: placeholderError } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_1__.supabase.storage.from(\"images\").remove([\n                    placeholderPath\n                ]);\n                if (placeholderError) {\n                    console.log(\"Placeholder file not found or already deleted:\", placeholderError);\n                } else {\n                    console.log(\"Placeholder file deleted successfully\");\n                }\n            };\n            await deleteRecursively(folderPath);\n            console.log(`Folder deletion completed for: ${folderPath}`);\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: true,\n                message: `Folder '${folderPath}' deleted successfully`\n            });\n        } catch (supabaseError) {\n            console.error(\"Supabase deletion error:\", supabaseError);\n            // Fallback to local folder deletion\n            try {\n                const uploadsDir = path__WEBPACK_IMPORTED_MODULE_3___default().join(process.cwd(), \"public\", \"uploads\");\n                const targetFolderPath = path__WEBPACK_IMPORTED_MODULE_3___default().join(uploadsDir, folderPath);\n                if (fs__WEBPACK_IMPORTED_MODULE_2___default().existsSync(targetFolderPath)) {\n                    fs__WEBPACK_IMPORTED_MODULE_2___default().rmSync(targetFolderPath, {\n                        recursive: true,\n                        force: true\n                    });\n                }\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                    success: true\n                });\n            } catch (localError) {\n                console.error(\"Local folder deletion error:\", localError);\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                    error: \"Failed to delete folder\"\n                }, {\n                    status: 500\n                });\n            }\n        }\n    } catch (error) {\n        console.error(\"Error deleting folder:\", error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: \"Unexpected error occurred\"\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./app/api/upload/folders/route.ts\n");

/***/ }),

/***/ "(rsc)/./app/lib/supabase.ts":
/*!*****************************!*\
  !*** ./app/lib/supabase.ts ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createClient: () => (/* binding */ createClient),\n/* harmony export */   supabase: () => (/* binding */ supabase)\n/* harmony export */ });\n/* harmony import */ var _supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @supabase/supabase-js */ \"(rsc)/./node_modules/@supabase/supabase-js/dist/module/index.js\");\n\nconst supabaseUrl = \"https://ilxfqrxybtcftioizoan.supabase.co\";\nconst supabaseAnonKey = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImlseGZxcnh5YnRjZnRpb2l6b2FuIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTM4NTg5MjMsImV4cCI6MjA2OTQzNDkyM30.Jhjy7136xlqHcVjeCGPDvh4Ofpio3a09Y2fFu2Sqqh0\";\nif (!supabaseUrl || supabaseUrl === \"your-supabase-url\") {\n    console.warn(\"Supabase URL not configured properly. Using fallback configuration.\");\n}\nif (!supabaseAnonKey || supabaseAnonKey === \"your-supabase-anon-key\") {\n    console.warn(\"Supabase Anon Key not configured properly. Using fallback configuration.\");\n}\n// Create client with fallback values for development\nconst supabase = (0,_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__.createClient)(supabaseUrl || \"https://placeholder.supabase.co\", supabaseAnonKey || \"placeholder-key\");\n// Export createClient function for components that need to create their own client\nconst createClient = ()=>{\n    return (0,_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__.createClient)(supabaseUrl || \"https://placeholder.supabase.co\", supabaseAnonKey || \"placeholder-key\");\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./app/lib/supabase.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/@supabase","vendor-chunks/tr46","vendor-chunks/ws","vendor-chunks/whatwg-url","vendor-chunks/webidl-conversions","vendor-chunks/isows"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fupload%2Ffolders%2Froute&page=%2Fapi%2Fupload%2Ffolders%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fupload%2Ffolders%2Froute.ts&appDir=D%3A%5CRamy%5CRTS%5CReactJS%5Cdivemix-website%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=D%3A%5CRamy%5CRTS%5CReactJS%5Cdivemix-website&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();